{"version":3,"file":"select-element-component.js","sourceRoot":"","sources":["../../../../src/components/basic/select-element-component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAiB,MAAM,KAAK,CAAA;AACpD,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAA;AACzD,OAAO,MAAM,MAAM,qDAAqD,CAAA;AAGxE,IAAK,MAAsE;AAA3E,WAAK,MAAM;IAAE,sCAAqB,CAAA;IAAE,4BAAgB,CAAA;IAAE,gCAAoB,CAAA;AAAA,CAAC,EAAtE,MAAM,KAAN,MAAM,QAAgE;AAGpE,IAAM,sBAAsB,GAA5B,MAAM,sBAAuB,SAAQ,UAAU;IAA/C;;QAEH,aAAQ,GAAa,KAAK,CAAC;IAqB/B,CAAC;IAnBG,YAAY,CAAC,KAAK;QACd,MAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC;QACjC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACzB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACvC,MAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,aAAa,EAAE;gBACf,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAC5C;YACD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAChE;IACL,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;qBACE,MAAM;yCACc,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,aAAa,IAAI,CAAC,YAAY;qBAC/E,IAAI,CAAC,SAAS;mBAChB,CAAA;IACf,CAAC;CACJ,CAAA;AArBG;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;wDACC;AAFlB,sBAAsB;IADlC,aAAa,CAAC,mBAAmB,CAAC;GACtB,sBAAsB,CAuBlC","sourcesContent":["import {LitElement, html, PropertyValues} from 'lit'\r\nimport {customElement, property} from 'lit/decorators.js'\r\nimport styles from '../../../styles/components/basic/select.styles.scss'\r\nimport {SelectComponent} from \"./select-component\"\r\n\r\nenum Status {CONFIRMED=\"best√§tigt\", WAITING=\"warten\", DECLINED=\"abgelehnt\"}\r\n\r\n@customElement('cc-select-element')\r\nexport class SelectElementComponent extends LitElement {\r\n    @property({type: Boolean})\r\n    selected?: Boolean = false;\r\n\r\n    toggleOption(event) { //todo i don't really know how to get back into the shadow root to find the active element\r\n        const elem = event.currentTarget;\r\n        if (elem.closest(\".select\")) {\r\n            const select = elem.closest(\".select\");\r\n            const activeElement = select.querySelector(\".active\");\r\n            if (activeElement) {\r\n                activeElement.classList.remove(\"active\");\r\n            }\r\n            elem.querySelector(\"select-element\").classList.add(\"active\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <style>${styles}</style>\r\n            <div class=\"select-element ${this.selected ? \"active\" : \"\"}\" @click=\"${this.toggleOption}\">\r\n                <p>${this.innerHTML}</p>\r\n            </div>`\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        \"cc-select-element\": SelectElementComponent;\r\n    }\r\n}"]}