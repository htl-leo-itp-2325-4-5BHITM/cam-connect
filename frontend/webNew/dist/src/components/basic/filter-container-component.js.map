{"version":3,"file":"filter-container-component.js","sourceRoot":"","sources":["../../../../src/components/basic/filter-container-component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAiB,MAAM,KAAK,CAAA;AACpD,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAA;AACzD,OAAO,MAAM,MAAM,+DAA+D,CAAA;AAG3E,IAAM,wBAAwB,GAA9B,MAAM,wBAAyB,SAAQ,UAAU;IAAjD;;QAEH,SAAI,GAAY,aAAa,CAAC;IA0BlC,CAAC;IArBG;;;;OAIG;IACH,YAAY,CAAC,CAAO,EAAE,MAAM;QACxB,MAAM,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAA;QAClC,IAAI,IAAI,GAAG,CAAC,CAAC,MAA8B,CAAA;QAC3C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;IACrC,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;qBACE,MAAM;;qCAEU,IAAI,CAAC,IAAI;kBAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,+DAA+D;SACtF,IAAI,CAAA,6BAA6B,CAAC,CAAO,EAAE,EAAE,GAAE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA,CAAA,CAAC,KAAK,MAAM,CAAC,IAAI,MAAM,CACzG;mBACE,CAAC;IAChB,CAAC;CACJ,CAAA;AA1BG;IADC,QAAQ,EAAE;sDACmB;AAG9B;IADC,QAAQ,EAAE;yDACF;AALA,wBAAwB;IADpC,aAAa,CAAC,qBAAqB,CAAC;GACxB,wBAAwB,CA4BpC","sourcesContent":["import {LitElement, html, PropertyValues} from 'lit'\r\nimport {customElement, property} from 'lit/decorators.js'\r\nimport styles from '../../../styles/components/basic/filter-container.styles.scss'\r\n\r\n@customElement('cc-filter-container')\r\nexport class FilterContainerComponent extends LitElement {\r\n    @property()\r\n    name?: string = 'Filterblock';\r\n\r\n    @property()\r\n    options?;\r\n\r\n    /**\r\n     * handles the users click ona filter option, highlights it and //TODO passes it back to the index.js\r\n     * @param e\r\n     * @param option\r\n     */\r\n    selectOption(e:Event, option){\r\n        option.selected = !option.selected\r\n        let elem = e.target as HTMLParagraphElement\r\n        elem.classList.toggle(\"selected\")\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <style>${styles}</style>\r\n            <div class=\"filter-block\">\r\n                <p class=\"heading\">${this.name}</p>\r\n                ${this.options.map((option) => //loop over all options and map(return/create) an item for each\r\n                        html`<p class=\"option\" @click=\"${(e:Event) => {this.selectOption(e, option)}}\">${option.name}</p>`\r\n                )}\r\n            </div>`;\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        \"cc-filter-container\": FilterContainerComponent;\r\n    }\r\n}"]}