apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx

spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:stable
          ports:
            - containerPort: 80
          volumeMounts:
            - name: default-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
            - name: www
              mountPath: /usr/share/nginx/html
              readOnly: true
      volumes:
        - name: default-conf
          configMap:
            name: nginx-config
            items:
              - key: default.conf
                path: default.conf
        - name: www
          persistentVolumeClaim:
            claimName: nginx-www
---
apiVersion: v1
kind: Service
metadata:
  name: nginx

spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config

data:
  default.conf: |
    server {
        listen 80;
        root /usr/share/nginx/html;
        rewrite_log on;
        error_log /dev/stdout debug;

        location /api/ {
            proxy_pass http://appsrv:8080;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host:$server_port;
        }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: nginx-www

  annotations:
    nfs.io/storage-path: "nginx-www"
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: standard
  resources:
    requests:
      storage: 100Mi
---
